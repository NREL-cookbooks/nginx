user <%= node[:nginx][:user] %>;
worker_processes <%= node[:nginx][:worker_processes] %>;
pid /var/run/nginx.pid;
<% if node[:nginx][:daemon_disable] -%>
daemon off;
<% end -%>

error_log <%= node[:nginx][:log_dir] %>/error.log;

events {
  worker_connections <%= node[:nginx][:worker_connections] %>;
}

http {
  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  <% if node[:nginx][:keepalive] == "on" %>
  keepalive_timeout  <%= node[:nginx][:keepalive_timeout] %>;
  <% end %>
  server_tokens <%= node[:nginx][:server_tokens] %>;

  # server_names_hash_bucket_size <%= node[:nginx][:server_names_hash_bucket_size] %>;

  include <%= node[:nginx][:dir] %>/mime.types;
  default_type application/octet-stream;

  # With Nginx behind HAProxy, we don't want Nginx's internal ports used in
  # redirects.
  server_name_in_redirect off;
  port_in_redirect off;

  ##
  # Logging Settings
  ##

  access_log <%= node[:nginx][:log_dir] %>/access.log;

  ##
  # Gzip Settings
  ##

  gzip <%= node[:nginx][:gzip] %>;
  <% if node[:nginx][:gzip] == "on" %>
  gzip_disable "<%= node[:nginx][:gzip_disable] %>";
  gzip_http_version <%= node[:nginx][:gzip_http_version] %>;
  gzip_comp_level <%= node[:nginx][:gzip_comp_level] %>;
  gzip_proxied <%= node[:nginx][:gzip_proxied] %>;
  gzip_types <%= node[:nginx][:gzip_types].join(' ') %>;
  <% end %>

  ##
  # Virtual Host Configs
  ##

  include <%= node[:nginx][:dir] %>/conf.d/*.conf;
  include <%= node[:nginx][:dir] %>/sites-enabled/*;
}
